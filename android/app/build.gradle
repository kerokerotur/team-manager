plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def dartDefines = [:];
if (project.hasProperty('dart-defines')) {
    // カンマ区切りかつBase64でエンコードされている dart-defines をデコードして変数に格納します。
    dartDefines = dartDefines + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->
                def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                pair.length == 2 ? [(pair.first()): pair.last()] : [:]
            }
}

android {
    namespace = "com.example.flutter_template"
    compileSdk 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        // coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        // multiDexEnabled true
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        applicationId "${dartDefines.APP_ID}"
        resValue "string", "app_name", "${dartDefines.APP_NAME}"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

// dependencies {
//     coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
//     implementation 'androidx.window:window:1.0.0'
//     implementation 'androidx.window:window-java:1.0.0'
// }

flutter {
    source = "../.."
}

task copySources(type: Copy) {
    from "src/${dartDefines.FLAVOR}/res"
    into 'src/main/res'
}

tasks.whenTaskAdded { task ->
    task.dependsOn copySources
}